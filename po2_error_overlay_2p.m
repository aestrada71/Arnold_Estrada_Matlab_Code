%po2_error_overlay_2p
%
%Written by Alex Greis, Arnold Estrada
%11/03/2007
%Last Updated: 11/03/2007

%USAGE:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
%po2_error_overlay_2p
    %Outputs image with line plot and only po2 values
%po2_overlay_2p(n)
    %n selects values to be displayed on overlay plot
        %0: po2 values only
        %1: po2 values + R values
        %2: po2 values + Magnitude values
        %3: po2 values + R values + Magnitude values
%po2_overlay_2p(x,n)
    %x selects type of plot
        %0: overlay will have lines connecting acquisition points
        %1: overlay will have only points
    %n selects values to be displayed on overlay plot (same as previous)
%Description:::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::::
%For a given .txt file generated by Lifetime Data Acquisition in Two-Photon
    %read all data points from file
    %read all associated .dat files, calculate lifetimes, then PO2 values
    %write them into text file as new data column
    %Plot the data using plot2d (draw microvasculature as lines)
    %Average image file and overlay that onto the plot

function po2_error_overlay_2p(dots,output)
%Process arguments-----------------------
%default case (0 args): line plot, plot po2 only
Old_Files = 1;
Error_Calc=1;

quench_constant = 356;   %1/(torr.sec)
check = 0;
if(nargin == 0)
    dots=0;
    output=0;
    check=1;
end
%default case (1 arg): line plot, variable output
if (nargin ==1)
    output = dots;
    dots = 0;
    check=1;
end
%if none of the default cases were triggered (check = 1) and nargin ~= 2
%**************
if(check==0)
if (nargin ~= 2)
    error('Overlay:Num_args','Overlay requires 0-2 arguments - po2_overlay_2p(a,b)\n-a: 1 for dot plot, 0 for line plot\n-b: 0 for po2 data, 1 for po2+r, 2 for po2+magnitude, 3 for po2+r+magnitude');
end
end
%**************
if(dots~=0)&&(dots~=1)
    error('Overlay:Dots','Invalid argument: first argument can be only 1 or 0\n0: Overlay plot will have lines\n1: Overlay plot will have only points');
end
if(output~=0)&&(output~=1)&&(output~=2)&&(output~=3)
    error('Overlay:Output','Invalid argument: second argument can be only 0,1,2, or 3\n0: po2 values only\n1: po2 + r values\n2: po2 + magnitude values\n3: po2 + r + magnitude values');
end
%----------------------------------------

%read in text file, import data into Matlab
[fileName,pathName] = uigetfile('*.txt','Select Lifetime Acquisition text file','c:\Data\');
fpath=strcat(pathName,fileName);
if (Old_Files)
    r_offset = 1;
else
    r_offset = 2;
end
M = dlmread(fpath,',',r_offset,0);

%Open Lifetime data and calculate lifetime/PO2
if (~Old_Files)
    fpath2 = strrep(fpath, '.txt', '_LifeTime_1.dat');
    str1 = '1.dat';
else
    fileName2 = strrep(fileName, '.txt', '.dat');
    fileName2 = strcat('LifeTime_1_',fileName2);
    fpath2 = strcat(pathName,fileName2);
    str1 = 'LifeTime_1_';
end

count = 1;


for n=1:size(M,1)
    if (M(n,1)~=-1)
        %calculate lifetime, then PO2 with that lifetime, insert into M
        %--------------------------Copied/Modified from calclifetimes()--------------------------------------------
        [lifetime, f_result] = calc_lifetime(fpath2);
        po2val = po2(lifetime);
        if (Error_Calc)
            ltError = lifetime_error(fpath2);
            po2Error = ltError/(quench_constant * lifetime^2);
        end
        %---------------------------------------------------------------------------------------------------------
        %calculate PO2 and put in data matrix;
        
        M(n,5)=lifetime;
        M(n,6)=po2val;
        M(n,7)=f_result.r;
        M(n,8)=f_result.m(2);
        if(Error_Calc)
            M(n,9) = ltError;
            M(n,10) = ltError / lifetime;
            M(n,11) = po2Error;
            M(n,12) = n;
        else
            M(n,9)=n;
        end
        %update file name
        count=count+1;
        if (~Old_Files)
            str2 = int2str(count);
            str2 = strcat(str2,'.dat');
            fpath2 = strrep(fpath2,str1,str2);
        else
            str2 = sprintf('LifeTime_%i_',count);
            %str2 = strcat(str2,'.dat');
            fpath2 = strrep(fpath2,str1,str2);
        end
        
        str1=str2;
    end
end

%Open image (.dat file),average, and draw it
%NOTE: Currently you must select desired image to overlay due to poor
%acquisition quality. When image quality increases, use a=avg_2p(fpath)

%fpath = strrep(fpath, 'txt', 'dat');
%a=avg_2p(fpath2);
a=avg_2p();
imagesc(a);
%Plot the data in the new txt file
hold on;
plot2d(M,dots,output);
colormap bone;

%Save lifetime/PO2 values in another text file (same directory as original)
%Create a .txt file -needed to create new file (it doesn't format
%the matrix or insert 2 lines of text)
saveFile = strcat(pathName,fileName);
if (Error_Calc)
    saveFile = strrep(saveFile,'.txt','_Error_po2.txt');
else
    saveFile = strrep(saveFile,'.txt','_po2.txt');
end
    
    %save(saveFile,'M','-ASCII');
%get first 2 lines
fid = fopen(fpath);
file = textscan(fid, '%s', 'delimiter', '\n');
fclose(fid);
tempCell = file{1};
line1=tempCell{1};
line2=tempCell{2};
%write file (overwrite file created by save)
A=char(1,1);
A=line1;
A=line2;
fid = fopen(saveFile, 'wt');
Str=char();
Str=line1;
fprintf(fid,'%s\n',Str);
if (Old_Files)
    Str=line2;
    fprintf(fid,'%s\n',Str);
end

if(Error_Calc)
    Str=strcat(Str,' Po2 Error was calculated');
    fprintf(fid,'%s\n',Str);
end


if(~Error_Calc)
    Str='#       X       Y       X Volt  Y Volt  Lifetime        po2     R       Mag';
else
    Str='#       X       Y       X Volt  Y Volt  Lifetime        po2     R       Mag     LT_Error     LT_Error/Mean     pO2_Error';
end
fprintf(fid,'%s\n',Str);

%restructure matrix to have # in first colum (it's in 12th if selective, 9 if not)

M = circshift(M, [0, 1]);

%iterate through each line, output data
if(~Error_Calc)
    for n=1:(size(M,1))
         A=M(n,1:9);
         fprintf(fid,'%d\t%d\t%d\t%.3f\t%.3f\t%e\t%.3f\t%.3f\t%.4f\n',A);
    end
else
    for n=1:(size(M,1))
         A=M(n,1:12);
         fprintf(fid,'%d\t%d\t%d\t%.3f\t%.3f\t%.4e\t%.3f\t%.3f\t%.4f\t%.4e\t%.4e\t%.4e\n',A);
    end
end
fclose(fid);
saveFile
clear lastfit;

