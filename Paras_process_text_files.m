function [varargout] = Paras_process_text_files()
%analize a folder's worth of txt files and stores lifetime data in a file

clear all
bDoubleExp = 0;
%read in po2 values from txt file generated by sdt file processing
%each po2 array element's index corresponds to sdt file number
if ispc
    temp = 'c:\Data';
else
    temp = '/Volumes/RUGGED/Data/2011_01_31/';
    %temp = './';
end 
[fname, fpath]= uigetfile('Lifetime_Files_Summary.txt','Select Lifetime Summary File', temp);
fname = fullfile(fpath,fname);

if (bDoubleExp)
    [sdtFile lt po2 equation a b c tau1 tau2 r] = textread(fname, '%s %f %f %s %f %f %f %f %f %f','headerlines',1);
else
    [sdtFile lt po2 equation a b tau r]  = textread(fname, '%s %f %f %s %f %f %f %f','headerlines',1);
end

%% get file names
if ispc
    fpath = uigetdir('c:\Data\');
else
    fpath = uigetdir('/Volumes/RUGGED/Data/2011_01_31/');
end

fpath2 = [fpath '/*.txt'];
%fpath3 = [fpath '/*.dat']; %get all .dat files names

txtStruct = dir(fpath2);

%datStruct = dir(fpath3);

numFiles = size(txtStruct,1);

datStruct = txtStruct;
for(n=1:numFiles)
    [pathstr, name, ext] = fileparts(fullfile(fpath,txtStruct(n).name));
    temp = strcat(name,'.dat');
    datStruct(n).name = temp;
end
%% Open results file
outFName = [fpath '/Lifetime_Measurement_Locations_Summary.txt'];
fid=fopen(outFName,'w');
fprintf(fid, 'File Name\t SDT Number \t PO2Val\t  rval\t X \t Y \n');


%reads text files individualy
%txtStruct contains names of all .txt files in directory
%datStrcut contains names of all .dat files in directory

for (n=1:numFiles)
    txtName = fullfile(fpath,txtStruct(n).name)
    datName = fullfile(fpath,datStruct(n).name);
    %datName = datStruct(n).name %get name of dat file
    
    acqNo = [];
    X = [];
    Y=[];
 
 %read text file
 
    [numPoints] = textread(txtName, '%*s %d %*s',1,'delimiter',' ','headerlines',1);
    [numContours] = textread(txtName, '%*s %d %*s',1,'delimiter',' ','headerlines',2);
    %[acqNo,X,Y] = textread(txtName, '%d %*s %d %*s %d %*s %*f %*s %*f','headerlines',(4 + numContours));
    
    ptCount = 1;
    lineCounter = (4 + numContours);
    while(ptCount <= numPoints)
        %make sure on a valid line
        [testVal] = textread(txtName, '%d %*d %*f %*f',1,'delimiter',',','headerlines',lineCounter);
        if (testVal ~= -1)
            %read one line at a time
            [acqNo(ptCount),X(ptCount),Y(ptCount)] = textread(txtName, '%d %d %d %*f %*f',1,'delimiter',',','headerlines',lineCounter);
            ptCount = ptCount + 1;
            lineCounter = lineCounter + 1;
        else
            lineCounter = lineCounter + 2;
        end
        
                    
    end
    sprintf('Last LT Act num for this file was %i\n',acqNo(end))
  %  for (x=1:length(acqNo)) %go thru entire array in txt file
    %    if(X(x)~=-1) %-1 signifies last line of txt file
     %   fprintf(fid,'%d %d %d \n', acqNo(x), X(x), Y(x)); %print out each value at appropriate index 
        
    %output .dat file right here and overlay pO2 values
    newplot
    a=avg_2p(datName);
    figure();
    imagesc(a);
    colormap bone;
    axis square;
    hold on

    %overlay po2 values
    for(i=1:length(acqNo))
        %plot point markers
        plot(X(i),Y(i),'ro','LineWidth',2,'MarkerSize',4, 'MarkerEdgeColor','r', 'MarkerFaceColor','r');

        %Plot values

        outStr = num2str(po2(acqNo(i)),'%.1f');
        if (r(acqNo(i)) < 0.97)
            outStr = [outStr '*'];  %Mark if was not a good lifetime fit
        end
        
        text(X(i)+15,Y(i),outStr,'FontSize',10,'FontWeight','bold','Color','green')
        
        %Write vals to file
        fprintf(fid,'%s\t %d\t %.1f\t %.3f\t %d\t %d \n', txtName, acqNo(i), po2(acqNo(i)), r(acqNo(i)), X(i), Y(i)); %print out each value to summary txt file
    end
        
        
    %Save image with overlaid values
    tempName = strrep(txtName, '.txt', '_Val_Overlay');
  %  h=gcf;
  %  saveas(h,tempName,'pdf');
  %  close(h);


 
    
end

status = fclose(fid);
varargout(1) = {acqNo};

end